import random  # bvgjhnnbhretv random


def crypto(s, key):  # ф-ция шифорвания
    random.seed(key)  # полцчаем сл число, на которое сжвигать сллова (которая буква меяется)
    ln = len(s)  # длинну входной строки
    keys = random.sample(range(ln),
                         ln)  # задаем, что ключнм шифра станут шаблонные значения, (биюлиотека random,в промежутке  до длинны сьтроки(в  численном выражении) )
    out = ''  # результа шимфорвания до начала
    for i in keys: out += s[
        i]  # перебираем все щаблоны(на строку из 3 бцукв - 6 сл.чисел в диапазоне отт 1 до 3), если по диапазону поадходит, сдивгаемся на соотв. значение и мняеи букву под курсором
    return out  # возвращаем результат


def encrypt(s, key):  # ф-ция шифорвания дешифорвания
    random.seed(key)  # полцчаем сл число, на которое сжвигать сллова (которая буква меяется)
    ln = len(s)  # и длинну строки
    keys = random.sample(range(ln), ln)  # диарппазон oif,kjyys[ ключей
    out = [' ' for _ in range(ln)]  # в строке от гначала, до конца, расставляемм пробелы
    for i, j in zip(keys, s):  # затем -слова, между прообелами
        out[i] = j  # каждое след.слово- складывакем в буфферную переменную
    return ''.join(out)  # просто сцепляем полученную строку


s1 = crypto('Пример шифруемой строки\nметодом перестановки', 5)  # строка, сдвинется на 5 позиций
print('crypt:\n' + s1)  # зашифрованная она такаова
print('encrypt:\n' + encrypt(s1, 5))  # расшифрованная такова
# просто запустить, но, в нашем случае, я не понимаю, на скольькоо позиций сдвигали, потому, файд не подставить

def find_farthest_orbit(orbits: list) -> tuple:
    """
ланеты вращаются вокруг звезд по эллиптическим орбитам. Назовём самой далёкой планетой ту, орбита которой имеет самую
большую площадь.
Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит планет найдет ту, по которой вращается
самая далёкая планета. Круговые орбиты не учитывайте: вы знаете, что у вашей звезды таких планет нет, зато искусственные
спутники были запущены на круговые орбиты.
Результатом функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далёкой планеты.
Каждая орбита представляет из себя кортеж из пары чисел – полуосей её эллипса. Площадь эллипса вычисляется по формуле
S = πab, где a и b – длины полуосей эллипса.
При решении задачи используйте списочные выражения.
Подсказка: проще всего будет найти эллипс в два шага: сначала вычислить самую большую площадь эллипса, а затем найти и
сам эллипс, имеющий такую площадь.
Гарантируется, что самая далёкая планета ровно одна.
    :param orbits: список орбит планет
    :return: самая дальняя плпнета
    >>> find_farthest_orbit([(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]), (6, 6)
    0
    ((6, 6), (6, 6))

    """
    sp = list()
    print(len(sp))
    if isinstance(orbits, list) and all(isinstance(i, tuple) for i in orbits):
        for i in orbits:
            sp.append(i[0] * i[1])
        ind = sp.index(max(sp))
        return orbits[ind]
    else:
        raise TypeError('передан неверный тип данных')
